/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EscrowFacet, EscrowFacetInterface } from "../EscrowFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20Contract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "Erc20Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_transferAmount",
        type: "uint256",
      },
    ],
    name: "TransferEscrow",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_erc20Contracts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "batchDepositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "batchDepositGHST",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Contract",
        type: "address",
      },
    ],
    name: "escrowBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Contract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_transferAmount",
        type: "uint256",
      },
    ],
    name: "transferEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110a0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063467ab5cf1461005c578063ab0fcabf14610071578063b0facab314610084578063db87db5214610097578063ea20c3c6146100c0575b600080fd5b61006f61006a36600461099f565b6100d3565b005b61006f61007f366004610b01565b6101de565b61006f610092366004610b44565b6104c4565b6100aa6100a5366004610ad6565b6105a8565b6040516100b7919061100a565b60405180910390f35b61006f6100ce366004610a35565b610668565b8481146100fb5760405162461bcd60e51b81526004016100f290610fb8565b60405180910390fd5b84831461011a5760405162461bcd60e51b81526004016100f290610e8a565b60005b858110156101d557600087878381811061014757634e487b7160e01b600052603260045260246000fd5b905060200201359050600086868481811061017257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610187919061097e565b905060008585858181106101ab57634e487b7160e01b600052603260045260246000fd5b9050602002013590506101bf8383836104c4565b50505080806101cd90611043565b91505061011d565b50505050505050565b6000848152600d60205260409020600a015484906001600160a01b031661020361076a565b6001600160a01b0316146102295760405162461bcd60e51b81526004016100f290610f5b565b6000858152600d60205260409020600a01548590600160d01b900460ff16156102645760405162461bcd60e51b81526004016100f290610e36565b6000868152600d60205260409020600b8101546009909101546001600160a01b039182169116816102a75760405162461bcd60e51b81526004016100f290610c32565b866001600160a01b0316816001600160a01b031614156102d95760405162461bcd60e51b81526004016100f290610ee7565b6040516370a0823160e01b81526000906001600160a01b038916906370a0823190610308908690600401610b94565b60206040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103589190610abe565b90508581101561037a5760405162461bcd60e51b81526004016100f290610d5b565b866001600160a01b0316886001600160a01b03168a7f3add497713cabddc9b3f3d9963688a629915a706016b0b38c08a7e675b8da7ae868a6040516103c0929190610be6565b60405180910390a4604051636eb1769f60e11b815286906001600160a01b038a169063dd62ed3e906103f89087903090600401610ba8565b60206040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610abe565b10156104ad57604051632ce7500560e01b81526001600160a01b03841690632ce750059061047a908b90600401610b94565b600060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b505050505b6104b9888489896107c7565b505050505050505050565b6000838152600d60205260409020600b8101546009909101546001600160a01b039182169116816105075760405162461bcd60e51b81526004016100f290610c32565b836001600160a01b0316816001600160a01b031614156105395760405162461bcd60e51b81526004016100f290610dc4565b61054161076a565b6001600160a01b0316846001600160a01b0316867f6cd2b0bc62ff8328a951d28fac4af370c453c726630896bceb87466dcf6ed5838587604051610586929190610be6565b60405180910390a46105a18461059a61076a565b84866107c7565b5050505050565b6000828152600d60205260408120600b01546001600160a01b0316806105e05760405162461bcd60e51b81526004016100f290610c32565b6040516370a0823160e01b81526000906001600160a01b038516906370a082319061060f908590600401610b94565b60206040518083038186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190610abe565b95945050505050565b8281146106875760405162461bcd60e51b81526004016100f290610fb8565b73385eeac5cb85a38a9a07a70c73e0a3271cfb54a760005b848110156107625760008686838181106106c957634e487b7160e01b600052603260045260246000fd5b90506020020135905060008585848181106106f457634e487b7160e01b600052603260045260246000fd5b6000858152600d60209081526040909120600b0154910292909201359250506001600160a01b0316806107395760405162461bcd60e51b81526004016100f290610c32565b61074c8561074561076a565b83856107c7565b505050808061075a90611043565b91505061069f565b505050505050565b6000333014156107c157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506107c49050565b50335b90565b833b806107e65760405162461bcd60e51b81526004016100f290610c76565b600080866001600160a01b03166323b872dd60e01b87878760405160240161081093929190610bc2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161084e9190610b78565b6000604051808303816000865af19150503d806000811461088b576040519150601f19603f3d011682016040523d82523d6000602084013e610890565b606091505b50915091506101d5828281156108dc578051156108d757808060200190518101906108bb9190610a9e565b6108d75760405162461bcd60e51b81526004016100f290610cbf565b610915565b8051156108fd578060405162461bcd60e51b81526004016100f29190610bff565b60405162461bcd60e51b81526004016100f290610d10565b5050565b80356001600160a01b038116811461093057600080fd5b919050565b60008083601f840112610946578182fd5b50813567ffffffffffffffff81111561095d578182fd5b602083019150836020808302850101111561097757600080fd5b9250929050565b60006020828403121561098f578081fd5b61099882610919565b9392505050565b600080600080600080606087890312156109b7578182fd5b863567ffffffffffffffff808211156109ce578384fd5b6109da8a838b01610935565b909850965060208901359150808211156109f2578384fd5b6109fe8a838b01610935565b90965094506040890135915080821115610a16578384fd5b50610a2389828a01610935565b979a9699509497509295939492505050565b60008060008060408587031215610a4a578384fd5b843567ffffffffffffffff80821115610a61578586fd5b610a6d88838901610935565b90965094506020870135915080821115610a85578384fd5b50610a9287828801610935565b95989497509550505050565b600060208284031215610aaf578081fd5b81518015158114610998578182fd5b600060208284031215610acf578081fd5b5051919050565b60008060408385031215610ae8578182fd5b82359150610af860208401610919565b90509250929050565b60008060008060808587031215610b16578384fd5b84359350610b2660208601610919565b9250610b3460408601610919565b9396929550929360600135925050565b600080600060608486031215610b58578283fd5b83359250610b6860208501610919565b9150604084013590509250925092565b60008251610b8a818460208701611013565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152610c1e816040850160208701611013565b601f01601f19169190910160400192915050565b60208082526024908201527f457363726f7746616365743a20446f6573206e6f74206861766520616e20657360408201526363726f7760e01b606082015260800190565b60208082526029908201527f4c696245524332303a20455243323020746f6b656e206164647265737320686160408201526873206e6f20636f646560b81b606082015260800190565b60208082526031908201527f4c696245524332303a207472616e73666572206f72207472616e7366657246726040820152706f6d2072657475726e65642066616c736560781b606082015260800190565b6020808252602b908201527f4c696245524332303a207472616e73666572206f72207472616e73666572467260408201526a1bdb481c995d995c9d195960aa1b606082015260800190565b60208082526043908201527f457363726f7746616365743a2043616e6e6f74207472616e73666572206d6f7260408201527f65207468616e2063757272656e7420455243323020657363726f772062616c616060820152626e636560e81b608082015260a00190565b6020808252604c908201527f457363726f7746616365743a204465706f736974696e6720455243323020746f60408201527f6b656e2043414e4e4f542062652073616d6520617320636f6c6c61746572616c60608201526b1022a9219918103a37b5b2b760a11b608082015260a00190565b60208082526034908201527f4c696241707053746f726167653a204f6e6c792063616c6c61626c65206f6e20604082015273756e6c6f636b65642041617665676f746368697360601b606082015260800190565b6020808252603a908201527f457363726f7746616365743a20546f6b656e49447320616e642045524332304360408201527f6f6e747261637473206c656e677468206d757374206d61746368000000000000606082015260800190565b6020808252604e908201527f457363726f7746616365743a205472616e7366657272696e672045524332302060408201527f746f6b656e2043414e4e4f542062652073616d6520617320636f6c6c6174657260608201526d30b61022a9219918103a37b5b2b760911b608082015260a00190565b6020808252603b908201527f4c696241707053746f726167653a204f6e6c792061617665676f74636869206f60408201527f776e65722063616e2063616c6c20746869732066756e6374696f6e0000000000606082015260800190565b60208082526032908201527f457363726f7746616365743a20546f6b656e49447320616e642056616c756573604082015271040d8cadccee8d040daeae6e840dac2e8c6d60731b606082015260800190565b90815260200190565b60005b8381101561102e578181015183820152602001611016565b8381111561103d576000848401525b50505050565b600060001982141561106357634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212204d8f7b98364a5875e00f68ae18a9d5e972f660d3a478dea741308633985376c664736f6c63430008010033";

export class EscrowFacet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EscrowFacet> {
    return super.deploy(overrides || {}) as Promise<EscrowFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EscrowFacet {
    return super.attach(address) as EscrowFacet;
  }
  connect(signer: Signer): EscrowFacet__factory {
    return super.connect(signer) as EscrowFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFacetInterface {
    return new utils.Interface(_abi) as EscrowFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EscrowFacet {
    return new Contract(address, _abi, signerOrProvider) as EscrowFacet;
  }
}
