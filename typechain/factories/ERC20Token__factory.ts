/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Token, ERC20TokenInterface } from "../ERC20Token";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "addApprovedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "contracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removeApprovedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ea4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d7146101cb578063a9059cbb146101de578063dce86003146101f1578063dd62ed3e14610206576100f5565b8063395093511461019257806370a08231146101a557806395d89b41146100fa5780639eea2279146101b8576100f5565b8063135171be116100d3578063135171be1461014257806318160ddd1461015557806323b872dd1461016a578063313ce5671461017d576100f5565b806306fdde03146100fa578063095ea7b3146101185780631249c58b14610138575b600080fd5b610102610219565b60405161010f9190610b96565b60405180910390f35b61012b610126366004610b15565b610238565b60405161010f9190610b8b565b61014061028e565b005b610140610150366004610a87565b610358565b61015d6103fb565b60405161010f9190610dc7565b61012b610178366004610ada565b610412565b6101856105bb565b60405161010f9190610dd0565b61012b6101a0366004610b15565b6105c0565b61015d6101b3366004610a87565b610655565b6101406101c6366004610a87565b610670565b61012b6101d9366004610b15565b6107c4565b61012b6101ec366004610b15565b610869565b6101f9610918565b60405161010f9190610b3e565b61015d610214366004610aa8565b61097d565b604080518082019091526004815263151154d560e21b60208201525b90565b336000818152602081815260408083206001600160a01b03871680855292528083208590555191929091600080516020610e4f8339815191529061027d908690610dc7565b60405180910390a350600192915050565b33600090815260016020526040812080546a084595161401484a000000928392916102ba908490610dde565b90915550506103ec80548291906014906102e5908490600160a01b90046001600160601b0316610df6565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550336001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161034d9190610dc7565b60405180910390a350565b6103606109a6565b6001600160a01b0381166000908152600360205260409020541561039f5760405162461bcd60e51b815260040161039690610d34565b60405180910390fd5b600280546001810182557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b039093166001600160a01b0319909316831790555460009182526003602052604090912055565b6103ec54600160a01b90046001600160601b031690565b6001600160a01b038316600081815260016020526040812054909133148061044857503360009081526003602052604090205415155b15610452576104fe565b6001600160a01b038516600090815260208181526040808320338452909152902054838110156104945760405162461bcd60e51b815260040161039690610cb2565b60001981146104fc576104a78482610e21565b6001600160a01b03871660008181526020818152604080832033808552925290912092909255600080516020610e4f8339815191526104e68785610e21565b6040516104f39190610dc7565b60405180910390a35b505b8281101561051e5760405162461bcd60e51b815260040161039690610c71565b6105288382610e21565b6001600160a01b03808716600090815260016020526040808220939093559086168152908120805485929061055e908490610dde565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516105a89190610dc7565b60405180910390a3506001949350505050565b601290565b336000908152602081815260408083206001600160a01b0386168452909152812054816105ed8483610dde565b90508181101561060f5760405162461bcd60e51b815260040161039690610d7f565b336000818152602081815260408083206001600160a01b038a168085529252918290208490559051909190600080516020610e4f833981519152906105a8908590610dc7565b6001600160a01b031660009081526001602052604090205490565b6106786109a6565b6001600160a01b038116600090815260036020526040902054806106ae5760405162461bcd60e51b815260040161039690610ce9565b60025481811461076357600060026106c7600184610e21565b815481106106e557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316905080600261070a600186610e21565b8154811061072857634e487b7160e01b600052603260045260246000fd5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526003909152604090208290555b600280548061078257634e487b7160e01b600052603160045260246000fd5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600390935250506040812055565b336000908152602081815260408083206001600160a01b0386168452909152812054828110156108065760405162461bcd60e51b815260040161039690610c2b565b6108108382610e21565b336000818152602081815260408083206001600160a01b038a16808552925291829020849055905192935091600080516020610e4f83398151915290610857908590610dc7565b60405180910390a35060019392505050565b33600090815260016020526040812054828110156108995760405162461bcd60e51b815260040161039690610c71565b6108a38382610e21565b33600090815260016020526040808220929092556001600160a01b038616815290812080548592906108d6908490610dde565b90915550506040516001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610857908790610dc7565b6060600060020180548060200260200160405190810160405280929190818152602001828054801561097357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610955575b5050505050905090565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b6109ae6109eb565b600401546001600160a01b03166109c3610a0f565b6001600160a01b0316146109e95760405162461bcd60e51b815260040161039690610be9565b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b600033301415610a6657600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506102359050565b503390565b80356001600160a01b0381168114610a8257600080fd5b919050565b600060208284031215610a98578081fd5b610aa182610a6b565b9392505050565b60008060408385031215610aba578081fd5b610ac383610a6b565b9150610ad160208401610a6b565b90509250929050565b600080600060608486031215610aee578081fd5b610af784610a6b565b9250610b0560208501610a6b565b9150604084013590509250925092565b60008060408385031215610b27578182fd5b610b3083610a6b565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015610b7f5783516001600160a01b031683529284019291840191600101610b5a565b50909695505050505050565b901515815260200190565b6000602080835283518082850152825b81811015610bc257858101830151858201604001528201610ba6565b81811115610bd35783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60408201526132b960f11b606082015260800190565b60208082526026908201527f4748535446616365743a20416c6c6f77616e63652064656372656173656420626040820152650656c6f7720360d41b606082015260800190565b60208082526021908201527f474853543a204e6f7420656e6f756768204748535420746f207472616e7366656040820152603960f91b606082015260800190565b6020808252601d908201527f474853543a204e6f7420616c6c6f77656420746f207472616e73666572000000604082015260600190565b6020808252602b908201527f4748535446616365743a20417070726f76656420636f6e747261637420646f6560408201526a1cc81b9bdd08195e1a5cdd60aa1b606082015260800190565b6020808252602b908201527f4748535446616365743a20417070726f76656420636f6e747261637420616c7260408201526a656164792065786973747360a81b606082015260800190565b60208082526028908201527f4748535446616365743a20416c6c6f77616e636520696e637265617365206f76604082015267195c999b1bddd95960c21b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610df157610df1610e38565b500190565b60006001600160601b03808316818516808303821115610e1857610e18610e38565b01949350505050565b600082821015610e3357610e33610e38565b500390565b634e487b7160e01b600052601160045260246000fdfe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220aa78b0f4387d0d7c56a43e8e378976afd555cdefa6a700fd11917f0151cbdaaa64736f6c63430008010033";

export class ERC20Token__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Token> {
    return super.deploy(overrides || {}) as Promise<ERC20Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
