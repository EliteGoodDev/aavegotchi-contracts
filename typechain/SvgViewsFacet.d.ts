/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface SvgViewsFacetInterface extends ethers.utils.Interface {
  functions: {
    "getAavegotchiSideSvgs(uint256)": FunctionFragment;
    "getItemSvgs(uint256)": FunctionFragment;
    "getItemsSvgs(uint256[])": FunctionFragment;
    "previewSideAavegotchi(uint256,address,int16[6],uint16[16])": FunctionFragment;
    "setSideViewDimensions(tuple[])": FunctionFragment;
    "setSideViewExceptions(tuple[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAavegotchiSideSvgs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getItemSvgs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getItemsSvgs",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "previewSideAavegotchi",
    values: [
      BigNumberish,
      string,
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setSideViewDimensions",
    values: [
      {
        itemId: BigNumberish;
        side: string;
        dimensions: {
          x: BigNumberish;
          y: BigNumberish;
          width: BigNumberish;
          height: BigNumberish;
        };
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setSideViewExceptions",
    values: [
      {
        itemId: BigNumberish;
        slotPosition: BigNumberish;
        exceptionBool: boolean;
      }[]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAavegotchiSideSvgs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getItemSvgs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getItemsSvgs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "previewSideAavegotchi",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSideViewDimensions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSideViewExceptions",
    data: BytesLike
  ): Result;

  events: {};
}

export class SvgViewsFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: SvgViewsFacetInterface;

  functions: {
    getAavegotchiSideSvgs(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { ag_: string[] }>;

    getItemSvgs(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { svg_: string[] }>;

    getItemsSvgs(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[string[][]] & { svgs_: string[][] }>;

    previewSideAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<[string[]] & { ag_: string[] }>;

    setSideViewDimensions(
      _sideViewDimensions: {
        itemId: BigNumberish;
        side: string;
        dimensions: {
          x: BigNumberish;
          y: BigNumberish;
          width: BigNumberish;
          height: BigNumberish;
        };
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSideViewExceptions(
      _sideViewExceptions: {
        itemId: BigNumberish;
        slotPosition: BigNumberish;
        exceptionBool: boolean;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getAavegotchiSideSvgs(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getItemSvgs(
    _itemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getItemsSvgs(
    _itemIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<string[][]>;

  previewSideAavegotchi(
    _hauntId: BigNumberish,
    _collateralType: string,
    _numericTraits: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    equippedWearables: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: CallOverrides
  ): Promise<string[]>;

  setSideViewDimensions(
    _sideViewDimensions: {
      itemId: BigNumberish;
      side: string;
      dimensions: {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      };
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSideViewExceptions(
    _sideViewExceptions: {
      itemId: BigNumberish;
      slotPosition: BigNumberish;
      exceptionBool: boolean;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getAavegotchiSideSvgs(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getItemSvgs(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getItemsSvgs(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<string[][]>;

    previewSideAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<string[]>;

    setSideViewDimensions(
      _sideViewDimensions: {
        itemId: BigNumberish;
        side: string;
        dimensions: {
          x: BigNumberish;
          y: BigNumberish;
          width: BigNumberish;
          height: BigNumberish;
        };
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    setSideViewExceptions(
      _sideViewExceptions: {
        itemId: BigNumberish;
        slotPosition: BigNumberish;
        exceptionBool: boolean;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getAavegotchiSideSvgs(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getItemSvgs(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getItemsSvgs(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    previewSideAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setSideViewDimensions(
      _sideViewDimensions: {
        itemId: BigNumberish;
        side: string;
        dimensions: {
          x: BigNumberish;
          y: BigNumberish;
          width: BigNumberish;
          height: BigNumberish;
        };
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSideViewExceptions(
      _sideViewExceptions: {
        itemId: BigNumberish;
        slotPosition: BigNumberish;
        exceptionBool: boolean;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAavegotchiSideSvgs(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getItemSvgs(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getItemsSvgs(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    previewSideAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setSideViewDimensions(
      _sideViewDimensions: {
        itemId: BigNumberish;
        side: string;
        dimensions: {
          x: BigNumberish;
          y: BigNumberish;
          width: BigNumberish;
          height: BigNumberish;
        };
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSideViewExceptions(
      _sideViewExceptions: {
        itemId: BigNumberish;
        slotPosition: BigNumberish;
        exceptionBool: boolean;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
