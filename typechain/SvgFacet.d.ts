/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface SvgFacetInterface extends ethers.utils.Interface {
  functions: {
    "deleteLastSvgLayers(bytes32,uint256)": FunctionFragment;
    "getAavegotchiSvg(uint256)": FunctionFragment;
    "getItemSvg(uint256)": FunctionFragment;
    "getSvg(bytes32,uint256)": FunctionFragment;
    "getSvgs(bytes32,uint256[])": FunctionFragment;
    "portalAavegotchisSvg(uint256)": FunctionFragment;
    "previewAavegotchi(uint256,address,int16[6],uint16[16])": FunctionFragment;
    "setItemsDimensions(uint256[],tuple[])": FunctionFragment;
    "setSleeves(tuple[])": FunctionFragment;
    "storeSvg(string,tuple[])": FunctionFragment;
    "updateSvg(string,tuple[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "deleteLastSvgLayers",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAavegotchiSvg",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getItemSvg",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSvg",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSvgs",
    values: [BytesLike, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "portalAavegotchisSvg",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "previewAavegotchi",
    values: [
      BigNumberish,
      string,
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setItemsDimensions",
    values: [
      BigNumberish[],
      {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setSleeves",
    values: [{ sleeveId: BigNumberish; wearableId: BigNumberish }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "storeSvg",
    values: [string, { svgType: BytesLike; sizes: BigNumberish[] }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "updateSvg",
    values: [
      string,
      { svgType: BytesLike; ids: BigNumberish[]; sizes: BigNumberish[] }[]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "deleteLastSvgLayers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchiSvg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getItemSvg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getSvg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getSvgs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "portalAavegotchisSvg",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "previewAavegotchi",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setItemsDimensions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setSleeves", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "storeSvg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "updateSvg", data: BytesLike): Result;

  events: {};
}

export class SvgFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: SvgFacetInterface;

  functions: {
    deleteLastSvgLayers(
      _svgType: BytesLike,
      _numLayers: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAavegotchiSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { ag_: string }>;

    getItemSvg(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { ag_: string }>;

    getSvg(
      _svgType: BytesLike,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { svg_: string }>;

    getSvgs(
      _svgType: BytesLike,
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[string[]] & { svgs_: string[] }>;

    portalAavegotchisSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      ] & {
        svg_: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ];
      }
    >;

    previewAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<[string] & { ag_: string }>;

    setItemsDimensions(
      _itemIds: BigNumberish[],
      _dimensions: {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setSleeves(
      _sleeves: { sleeveId: BigNumberish; wearableId: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    storeSvg(
      _svg: string,
      _typesAndSizes: { svgType: BytesLike; sizes: BigNumberish[] }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateSvg(
      _svg: string,
      _typesAndIdsAndSizes: {
        svgType: BytesLike;
        ids: BigNumberish[];
        sizes: BigNumberish[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  deleteLastSvgLayers(
    _svgType: BytesLike,
    _numLayers: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAavegotchiSvg(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getItemSvg(_itemId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  getSvg(
    _svgType: BytesLike,
    _itemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getSvgs(
    _svgType: BytesLike,
    _itemIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  portalAavegotchisSvg(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ]
  >;

  previewAavegotchi(
    _hauntId: BigNumberish,
    _collateralType: string,
    _numericTraits: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    equippedWearables: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: CallOverrides
  ): Promise<string>;

  setItemsDimensions(
    _itemIds: BigNumberish[],
    _dimensions: {
      x: BigNumberish;
      y: BigNumberish;
      width: BigNumberish;
      height: BigNumberish;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setSleeves(
    _sleeves: { sleeveId: BigNumberish; wearableId: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  storeSvg(
    _svg: string,
    _typesAndSizes: { svgType: BytesLike; sizes: BigNumberish[] }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateSvg(
    _svg: string,
    _typesAndIdsAndSizes: {
      svgType: BytesLike;
      ids: BigNumberish[];
      sizes: BigNumberish[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    deleteLastSvgLayers(
      _svgType: BytesLike,
      _numLayers: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getAavegotchiSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getItemSvg(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getSvg(
      _svgType: BytesLike,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getSvgs(
      _svgType: BytesLike,
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    portalAavegotchisSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    >;

    previewAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<string>;

    setItemsDimensions(
      _itemIds: BigNumberish[],
      _dimensions: {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    setSleeves(
      _sleeves: { sleeveId: BigNumberish; wearableId: BigNumberish }[],
      overrides?: CallOverrides
    ): Promise<void>;

    storeSvg(
      _svg: string,
      _typesAndSizes: { svgType: BytesLike; sizes: BigNumberish[] }[],
      overrides?: CallOverrides
    ): Promise<void>;

    updateSvg(
      _svg: string,
      _typesAndIdsAndSizes: {
        svgType: BytesLike;
        ids: BigNumberish[];
        sizes: BigNumberish[];
      }[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    deleteLastSvgLayers(
      _svgType: BytesLike,
      _numLayers: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAavegotchiSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getItemSvg(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSvg(
      _svgType: BytesLike,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSvgs(
      _svgType: BytesLike,
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    portalAavegotchisSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    previewAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setItemsDimensions(
      _itemIds: BigNumberish[],
      _dimensions: {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setSleeves(
      _sleeves: { sleeveId: BigNumberish; wearableId: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    storeSvg(
      _svg: string,
      _typesAndSizes: { svgType: BytesLike; sizes: BigNumberish[] }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateSvg(
      _svg: string,
      _typesAndIdsAndSizes: {
        svgType: BytesLike;
        ids: BigNumberish[];
        sizes: BigNumberish[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    deleteLastSvgLayers(
      _svgType: BytesLike,
      _numLayers: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAavegotchiSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getItemSvg(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSvg(
      _svgType: BytesLike,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSvgs(
      _svgType: BytesLike,
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    portalAavegotchisSvg(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    previewAavegotchi(
      _hauntId: BigNumberish,
      _collateralType: string,
      _numericTraits: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      equippedWearables: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setItemsDimensions(
      _itemIds: BigNumberish[],
      _dimensions: {
        x: BigNumberish;
        y: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setSleeves(
      _sleeves: { sleeveId: BigNumberish; wearableId: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    storeSvg(
      _svg: string,
      _typesAndSizes: { svgType: BytesLike; sizes: BigNumberish[] }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateSvg(
      _svg: string,
      _typesAndIdsAndSizes: {
        svgType: BytesLike;
        ids: BigNumberish[];
        sizes: BigNumberish[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
