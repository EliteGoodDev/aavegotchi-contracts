/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface ERC1155MarketplaceFacetInterface extends ethers.utils.Interface {
  functions: {
    "cancelERC1155Listing(uint256)": FunctionFragment;
    "cancelERC1155Listings(uint256[])": FunctionFragment;
    "executeERC1155Listing(uint256,uint256,uint256)": FunctionFragment;
    "getERC1155Category(address,uint256)": FunctionFragment;
    "getERC1155Listing(uint256)": FunctionFragment;
    "getERC1155ListingFromToken(address,uint256,address)": FunctionFragment;
    "getERC1155Listings(uint256,string,uint256)": FunctionFragment;
    "getListingFeeInWei()": FunctionFragment;
    "getOwnerERC1155Listings(address,uint256,string,uint256)": FunctionFragment;
    "setERC1155Categories(tuple[])": FunctionFragment;
    "setERC1155Listing(address,uint256,uint256,uint256)": FunctionFragment;
    "setListingFee(uint256)": FunctionFragment;
    "updateBatchERC1155Listing(address,uint256[],address)": FunctionFragment;
    "updateERC1155Listing(address,uint256,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cancelERC1155Listing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC1155Listings",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC1155Listing",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155Category",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155Listing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155ListingFromToken",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC1155Listings",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getListingFeeInWei",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerERC1155Listings",
    values: [string, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC1155Categories",
    values: [
      {
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumberish;
        category: BigNumberish;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC1155Listing",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setListingFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateBatchERC1155Listing",
    values: [string, BigNumberish[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateERC1155Listing",
    values: [string, BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "cancelERC1155Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC1155Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC1155Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155Category",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155ListingFromToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC1155Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getListingFeeInWei",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerERC1155Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC1155Categories",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC1155Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setListingFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateBatchERC1155Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateERC1155Listing",
    data: BytesLike
  ): Result;

  events: {
    "ChangedListingFee(uint256)": EventFragment;
    "ERC1155ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "ERC1155ListingAdd(uint256,address,address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "ERC1155ListingCancelled(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChangedListingFee"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC1155ExecutedListing"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC1155ListingAdd"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC1155ListingCancelled"): EventFragment;
}

export type ChangedListingFeeEvent = TypedEvent<
  [BigNumber] & { listingFeeInWei: BigNumber }
>;

export type ERC1155ExecutedListingEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    listingId: BigNumber;
    seller: string;
    buyer: string;
    erc1155TokenAddress: string;
    erc1155TypeId: BigNumber;
    category: BigNumber;
    _quantity: BigNumber;
    priceInWei: BigNumber;
    time: BigNumber;
  }
>;

export type ERC1155ListingAddEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    listingId: BigNumber;
    seller: string;
    erc1155TokenAddress: string;
    erc1155TypeId: BigNumber;
    category: BigNumber;
    quantity: BigNumber;
    priceInWei: BigNumber;
    time: BigNumber;
  }
>;

export type ERC1155ListingCancelledEvent = TypedEvent<
  [BigNumber] & { listingId: BigNumber }
>;

export class ERC1155MarketplaceFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ERC1155MarketplaceFacetInterface;

  functions: {
    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelERC1155Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeERC1155Listing(
      _listingId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getERC1155Category(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { category_: BigNumber }>;

    getERC1155Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        }
      ] & {
        listing_: [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        };
      }
    >;

    getERC1155ListingFromToken(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        }
      ] & {
        listing_: [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        };
      }
    >;

    getERC1155Listings(
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        })[]
      ] & {
        listings_: ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        })[];
      }
    >;

    getListingFeeInWei(overrides?: CallOverrides): Promise<[BigNumber]>;

    getOwnerERC1155Listings(
      _owner: string,
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        })[]
      ] & {
        listings_: ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean
        ] & {
          listingId: BigNumber;
          seller: string;
          erc1155TokenAddress: string;
          erc1155TypeId: BigNumber;
          category: BigNumber;
          quantity: BigNumber;
          priceInWei: BigNumber;
          timeCreated: BigNumber;
          timeLastPurchased: BigNumber;
          sourceListingId: BigNumber;
          sold: boolean;
          cancelled: boolean;
        })[];
      }
    >;

    setERC1155Categories(
      _categories: {
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumberish;
        category: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setListingFee(
      _listingFeeInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateBatchERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  cancelERC1155Listing(
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelERC1155Listings(
    _listingIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeERC1155Listing(
    _listingId: BigNumberish,
    _quantity: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getERC1155Category(
    _erc1155TokenAddress: string,
    _erc1155TypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getERC1155Listing(
    _listingId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean
    ] & {
      listingId: BigNumber;
      seller: string;
      erc1155TokenAddress: string;
      erc1155TypeId: BigNumber;
      category: BigNumber;
      quantity: BigNumber;
      priceInWei: BigNumber;
      timeCreated: BigNumber;
      timeLastPurchased: BigNumber;
      sourceListingId: BigNumber;
      sold: boolean;
      cancelled: boolean;
    }
  >;

  getERC1155ListingFromToken(
    _erc1155TokenAddress: string,
    _erc1155TypeId: BigNumberish,
    _owner: string,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean
    ] & {
      listingId: BigNumber;
      seller: string;
      erc1155TokenAddress: string;
      erc1155TypeId: BigNumber;
      category: BigNumber;
      quantity: BigNumber;
      priceInWei: BigNumber;
      timeCreated: BigNumber;
      timeLastPurchased: BigNumber;
      sourceListingId: BigNumber;
      sold: boolean;
      cancelled: boolean;
    }
  >;

  getERC1155Listings(
    _category: BigNumberish,
    _sort: string,
    _length: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean
    ] & {
      listingId: BigNumber;
      seller: string;
      erc1155TokenAddress: string;
      erc1155TypeId: BigNumber;
      category: BigNumber;
      quantity: BigNumber;
      priceInWei: BigNumber;
      timeCreated: BigNumber;
      timeLastPurchased: BigNumber;
      sourceListingId: BigNumber;
      sold: boolean;
      cancelled: boolean;
    })[]
  >;

  getListingFeeInWei(overrides?: CallOverrides): Promise<BigNumber>;

  getOwnerERC1155Listings(
    _owner: string,
    _category: BigNumberish,
    _sort: string,
    _length: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean
    ] & {
      listingId: BigNumber;
      seller: string;
      erc1155TokenAddress: string;
      erc1155TypeId: BigNumber;
      category: BigNumber;
      quantity: BigNumber;
      priceInWei: BigNumber;
      timeCreated: BigNumber;
      timeLastPurchased: BigNumber;
      sourceListingId: BigNumber;
      sold: boolean;
      cancelled: boolean;
    })[]
  >;

  setERC1155Categories(
    _categories: {
      erc1155TokenAddress: string;
      erc1155TypeId: BigNumberish;
      category: BigNumberish;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setERC1155Listing(
    _erc1155TokenAddress: string,
    _erc1155TypeId: BigNumberish,
    _quantity: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setListingFee(
    _listingFeeInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateBatchERC1155Listing(
    _erc1155TokenAddress: string,
    _erc1155TypeIds: BigNumberish[],
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateERC1155Listing(
    _erc1155TokenAddress: string,
    _erc1155TypeId: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC1155Listings(
      _listingIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    executeERC1155Listing(
      _listingId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getERC1155Category(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC1155Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean
      ] & {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        timeCreated: BigNumber;
        timeLastPurchased: BigNumber;
        sourceListingId: BigNumber;
        sold: boolean;
        cancelled: boolean;
      }
    >;

    getERC1155ListingFromToken(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean
      ] & {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        timeCreated: BigNumber;
        timeLastPurchased: BigNumber;
        sourceListingId: BigNumber;
        sold: boolean;
        cancelled: boolean;
      }
    >;

    getERC1155Listings(
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean
      ] & {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        timeCreated: BigNumber;
        timeLastPurchased: BigNumber;
        sourceListingId: BigNumber;
        sold: boolean;
        cancelled: boolean;
      })[]
    >;

    getListingFeeInWei(overrides?: CallOverrides): Promise<BigNumber>;

    getOwnerERC1155Listings(
      _owner: string,
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean
      ] & {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        timeCreated: BigNumber;
        timeLastPurchased: BigNumber;
        sourceListingId: BigNumber;
        sold: boolean;
        cancelled: boolean;
      })[]
    >;

    setERC1155Categories(
      _categories: {
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumberish;
        category: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setListingFee(
      _listingFeeInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateBatchERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ChangedListingFee(uint256)"(
      listingFeeInWei?: null
    ): TypedEventFilter<[BigNumber], { listingFeeInWei: BigNumber }>;

    ChangedListingFee(
      listingFeeInWei?: null
    ): TypedEventFilter<[BigNumber], { listingFeeInWei: BigNumber }>;

    "ERC1155ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256,uint256)"(
      listingId?: BigNumberish | null,
      seller?: string | null,
      buyer?: null,
      erc1155TokenAddress?: null,
      erc1155TypeId?: null,
      category?: BigNumberish | null,
      _quantity?: null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        buyer: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        _quantity: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    ERC1155ExecutedListing(
      listingId?: BigNumberish | null,
      seller?: string | null,
      buyer?: null,
      erc1155TokenAddress?: null,
      erc1155TypeId?: null,
      category?: BigNumberish | null,
      _quantity?: null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        buyer: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        _quantity: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    "ERC1155ListingAdd(uint256,address,address,uint256,uint256,uint256,uint256,uint256)"(
      listingId?: BigNumberish | null,
      seller?: string | null,
      erc1155TokenAddress?: null,
      erc1155TypeId?: null,
      category?: BigNumberish | null,
      quantity?: null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    ERC1155ListingAdd(
      listingId?: BigNumberish | null,
      seller?: string | null,
      erc1155TokenAddress?: null,
      erc1155TypeId?: null,
      category?: BigNumberish | null,
      quantity?: null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumber;
        category: BigNumber;
        quantity: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    "ERC1155ListingCancelled(uint256)"(
      listingId?: BigNumberish | null
    ): TypedEventFilter<[BigNumber], { listingId: BigNumber }>;

    ERC1155ListingCancelled(
      listingId?: BigNumberish | null
    ): TypedEventFilter<[BigNumber], { listingId: BigNumber }>;
  };

  estimateGas: {
    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelERC1155Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeERC1155Listing(
      _listingId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getERC1155Category(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC1155Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC1155ListingFromToken(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC1155Listings(
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getListingFeeInWei(overrides?: CallOverrides): Promise<BigNumber>;

    getOwnerERC1155Listings(
      _owner: string,
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setERC1155Categories(
      _categories: {
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumberish;
        category: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setListingFee(
      _listingFeeInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateBatchERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC1155Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeERC1155Listing(
      _listingId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getERC1155Category(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC1155Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC1155ListingFromToken(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC1155Listings(
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getListingFeeInWei(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerERC1155Listings(
      _owner: string,
      _category: BigNumberish,
      _sort: string,
      _length: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setERC1155Categories(
      _categories: {
        erc1155TokenAddress: string;
        erc1155TypeId: BigNumberish;
        category: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setListingFee(
      _listingFeeInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateBatchERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
