/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface AavegotchiFacetInterface extends ethers.utils.Interface {
  functions: {
    "aavegotchiClaimTime(uint256)": FunctionFragment;
    "allAavegotchisOfOwner(address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "getAavegotchi(uint256)": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "name()": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "symbol()": FunctionFragment;
    "tokenByIndex(uint256)": FunctionFragment;
    "tokenIdsOfOwner(address)": FunctionFragment;
    "tokenOfOwnerByIndex(address,uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "aavegotchiClaimTime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "allAavegotchisOfOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getAavegotchi",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenIdsOfOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "aavegotchiClaimTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allAavegotchisOfOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchi",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenIdsOfOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;

  events: {};
}

export class AavegotchiFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: AavegotchiFacetInterface;

  functions: {
    aavegotchiClaimTime(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { claimTime_: BigNumber }>;

    allAavegotchisOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          [number, number, number, number, number, number],
          [number, number, number, number, number, number],
          [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ],
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[]
        ] & {
          tokenId: BigNumber;
          name: string;
          owner: string;
          randomNumber: BigNumber;
          status: BigNumber;
          numericTraits: [number, number, number, number, number, number];
          modifiedNumericTraits: [
            number,
            number,
            number,
            number,
            number,
            number
          ];
          equippedWearables: [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ];
          collateral: string;
          escrow: string;
          stakedAmount: BigNumber;
          minimumStake: BigNumber;
          kinship: BigNumber;
          lastInteracted: BigNumber;
          experience: BigNumber;
          toNextLevel: BigNumber;
          usedSkillPoints: BigNumber;
          level: BigNumber;
          hauntId: BigNumber;
          baseRarityScore: BigNumber;
          modifiedRarityScore: BigNumber;
          locked: boolean;
          items: ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[];
        })[]
      ] & {
        aavegotchiInfos_: ([
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          [number, number, number, number, number, number],
          [number, number, number, number, number, number],
          [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ],
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[]
        ] & {
          tokenId: BigNumber;
          name: string;
          owner: string;
          randomNumber: BigNumber;
          status: BigNumber;
          numericTraits: [number, number, number, number, number, number];
          modifiedNumericTraits: [
            number,
            number,
            number,
            number,
            number,
            number
          ];
          equippedWearables: [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ];
          collateral: string;
          escrow: string;
          stakedAmount: BigNumber;
          minimumStake: BigNumber;
          kinship: BigNumber;
          lastInteracted: BigNumber;
          experience: BigNumber;
          toNextLevel: BigNumber;
          usedSkillPoints: BigNumber;
          level: BigNumber;
          hauntId: BigNumber;
          baseRarityScore: BigNumber;
          modifiedRarityScore: BigNumber;
          locked: boolean;
          items: ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[];
        })[];
      }
    >;

    approve(
      _approved: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { balance_: BigNumber }>;

    getAavegotchi(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          [number, number, number, number, number, number],
          [number, number, number, number, number, number],
          [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ],
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[]
        ] & {
          tokenId: BigNumber;
          name: string;
          owner: string;
          randomNumber: BigNumber;
          status: BigNumber;
          numericTraits: [number, number, number, number, number, number];
          modifiedNumericTraits: [
            number,
            number,
            number,
            number,
            number,
            number
          ];
          equippedWearables: [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ];
          collateral: string;
          escrow: string;
          stakedAmount: BigNumber;
          minimumStake: BigNumber;
          kinship: BigNumber;
          lastInteracted: BigNumber;
          experience: BigNumber;
          toNextLevel: BigNumber;
          usedSkillPoints: BigNumber;
          level: BigNumber;
          hauntId: BigNumber;
          baseRarityScore: BigNumber;
          modifiedRarityScore: BigNumber;
          locked: boolean;
          items: ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[];
        }
      ] & {
        aavegotchiInfo_: [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          [number, number, number, number, number, number],
          [number, number, number, number, number, number],
          [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ],
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[]
        ] & {
          tokenId: BigNumber;
          name: string;
          owner: string;
          randomNumber: BigNumber;
          status: BigNumber;
          numericTraits: [number, number, number, number, number, number];
          modifiedNumericTraits: [
            number,
            number,
            number,
            number,
            number,
            number
          ];
          equippedWearables: [
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number,
            number
          ];
          collateral: string;
          escrow: string;
          stakedAmount: BigNumber;
          minimumStake: BigNumber;
          kinship: BigNumber;
          lastInteracted: BigNumber;
          experience: BigNumber;
          toNextLevel: BigNumber;
          usedSkillPoints: BigNumber;
          level: BigNumber;
          hauntId: BigNumber;
          baseRarityScore: BigNumber;
          modifiedRarityScore: BigNumber;
          locked: boolean;
          items: ([
            BigNumber,
            BigNumber,
            [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            }
          ] & {
            balance: BigNumber;
            itemId: BigNumber;
            itemType: [
              string,
              string,
              string,
              [number, number, number, number, number, number],
              [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ],
              number[],
              [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              },
              BigNumber,
              BigNumber,
              BigNumber,
              number,
              number,
              boolean,
              number,
              boolean,
              number,
              number,
              number
            ] & {
              name: string;
              description: string;
              author: string;
              traitModifiers: [number, number, number, number, number, number];
              slotPositions: [
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean,
                boolean
              ];
              allowedCollaterals: number[];
              dimensions: [number, number, number, number] & {
                x: number;
                y: number;
                width: number;
                height: number;
              };
              ghstPrice: BigNumber;
              maxQuantity: BigNumber;
              totalQuantity: BigNumber;
              svgId: number;
              rarityScoreModifier: number;
              canPurchaseWithGhst: boolean;
              minLevel: number;
              canBeTransferred: boolean;
              category: number;
              kinshipBonus: number;
              experienceBonus: number;
            };
          })[];
        };
      }
    >;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { approved_: string }>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean] & { approved_: boolean }>;

    name(overrides?: CallOverrides): Promise<[string]>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { owner_: string }>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { tokenId_: BigNumber }>;

    tokenIdsOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[number[]] & { tokenIds_: number[] }>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { tokenId_: BigNumber }>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    totalSupply(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { totalSupply_: BigNumber }>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  aavegotchiClaimTime(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  allAavegotchisOfOwner(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      [number, number, number, number, number, number],
      [number, number, number, number, number, number],
      [
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number
      ],
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      ([
        BigNumber,
        BigNumber,
        [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        itemType: [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        };
      })[]
    ] & {
      tokenId: BigNumber;
      name: string;
      owner: string;
      randomNumber: BigNumber;
      status: BigNumber;
      numericTraits: [number, number, number, number, number, number];
      modifiedNumericTraits: [number, number, number, number, number, number];
      equippedWearables: [
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number
      ];
      collateral: string;
      escrow: string;
      stakedAmount: BigNumber;
      minimumStake: BigNumber;
      kinship: BigNumber;
      lastInteracted: BigNumber;
      experience: BigNumber;
      toNextLevel: BigNumber;
      usedSkillPoints: BigNumber;
      level: BigNumber;
      hauntId: BigNumber;
      baseRarityScore: BigNumber;
      modifiedRarityScore: BigNumber;
      locked: boolean;
      items: ([
        BigNumber,
        BigNumber,
        [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        itemType: [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        };
      })[];
    })[]
  >;

  approve(
    _approved: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  getAavegotchi(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      BigNumber,
      BigNumber,
      [number, number, number, number, number, number],
      [number, number, number, number, number, number],
      [
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number
      ],
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      ([
        BigNumber,
        BigNumber,
        [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        itemType: [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        };
      })[]
    ] & {
      tokenId: BigNumber;
      name: string;
      owner: string;
      randomNumber: BigNumber;
      status: BigNumber;
      numericTraits: [number, number, number, number, number, number];
      modifiedNumericTraits: [number, number, number, number, number, number];
      equippedWearables: [
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number,
        number
      ];
      collateral: string;
      escrow: string;
      stakedAmount: BigNumber;
      minimumStake: BigNumber;
      kinship: BigNumber;
      lastInteracted: BigNumber;
      experience: BigNumber;
      toNextLevel: BigNumber;
      usedSkillPoints: BigNumber;
      level: BigNumber;
      hauntId: BigNumber;
      baseRarityScore: BigNumber;
      modifiedRarityScore: BigNumber;
      locked: boolean;
      items: ([
        BigNumber,
        BigNumber,
        [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        itemType: [
          string,
          string,
          string,
          [number, number, number, number, number, number],
          [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ],
          number[],
          [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          },
          BigNumber,
          BigNumber,
          BigNumber,
          number,
          number,
          boolean,
          number,
          boolean,
          number,
          number,
          number
        ] & {
          name: string;
          description: string;
          author: string;
          traitModifiers: [number, number, number, number, number, number];
          slotPositions: [
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean,
            boolean
          ];
          allowedCollaterals: number[];
          dimensions: [number, number, number, number] & {
            x: number;
            y: number;
            width: number;
            height: number;
          };
          ghstPrice: BigNumber;
          maxQuantity: BigNumber;
          totalQuantity: BigNumber;
          svgId: number;
          rarityScoreModifier: number;
          canPurchaseWithGhst: boolean;
          minLevel: number;
          canBeTransferred: boolean;
          category: number;
          kinshipBonus: number;
          experienceBonus: number;
        };
      })[];
    }
  >;

  getApproved(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  isApprovedForAll(
    _owner: string,
    _operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  name(overrides?: CallOverrides): Promise<string>;

  ownerOf(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "safeTransferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    _operator: string,
    _approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  tokenByIndex(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenIdsOfOwner(_owner: string, overrides?: CallOverrides): Promise<number[]>;

  tokenOfOwnerByIndex(
    _owner: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenURI(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  transferFrom(
    _from: string,
    _to: string,
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    aavegotchiClaimTime(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    allAavegotchisOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        [number, number, number, number, number, number],
        [number, number, number, number, number, number],
        [
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number
        ],
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        ([
          BigNumber,
          BigNumber,
          [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          itemType: [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          };
        })[]
      ] & {
        tokenId: BigNumber;
        name: string;
        owner: string;
        randomNumber: BigNumber;
        status: BigNumber;
        numericTraits: [number, number, number, number, number, number];
        modifiedNumericTraits: [number, number, number, number, number, number];
        equippedWearables: [
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number
        ];
        collateral: string;
        escrow: string;
        stakedAmount: BigNumber;
        minimumStake: BigNumber;
        kinship: BigNumber;
        lastInteracted: BigNumber;
        experience: BigNumber;
        toNextLevel: BigNumber;
        usedSkillPoints: BigNumber;
        level: BigNumber;
        hauntId: BigNumber;
        baseRarityScore: BigNumber;
        modifiedRarityScore: BigNumber;
        locked: boolean;
        items: ([
          BigNumber,
          BigNumber,
          [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          itemType: [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          };
        })[];
      })[]
    >;

    approve(
      _approved: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    getAavegotchi(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        [number, number, number, number, number, number],
        [number, number, number, number, number, number],
        [
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number
        ],
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        ([
          BigNumber,
          BigNumber,
          [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          itemType: [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          };
        })[]
      ] & {
        tokenId: BigNumber;
        name: string;
        owner: string;
        randomNumber: BigNumber;
        status: BigNumber;
        numericTraits: [number, number, number, number, number, number];
        modifiedNumericTraits: [number, number, number, number, number, number];
        equippedWearables: [
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number,
          number
        ];
        collateral: string;
        escrow: string;
        stakedAmount: BigNumber;
        minimumStake: BigNumber;
        kinship: BigNumber;
        lastInteracted: BigNumber;
        experience: BigNumber;
        toNextLevel: BigNumber;
        usedSkillPoints: BigNumber;
        level: BigNumber;
        hauntId: BigNumber;
        baseRarityScore: BigNumber;
        modifiedRarityScore: BigNumber;
        locked: boolean;
        items: ([
          BigNumber,
          BigNumber,
          [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          itemType: [
            string,
            string,
            string,
            [number, number, number, number, number, number],
            [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ],
            number[],
            [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            },
            BigNumber,
            BigNumber,
            BigNumber,
            number,
            number,
            boolean,
            number,
            boolean,
            number,
            number,
            number
          ] & {
            name: string;
            description: string;
            author: string;
            traitModifiers: [number, number, number, number, number, number];
            slotPositions: [
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean,
              boolean
            ];
            allowedCollaterals: number[];
            dimensions: [number, number, number, number] & {
              x: number;
              y: number;
              width: number;
              height: number;
            };
            ghstPrice: BigNumber;
            maxQuantity: BigNumber;
            totalQuantity: BigNumber;
            svgId: number;
            rarityScoreModifier: number;
            canPurchaseWithGhst: boolean;
            minLevel: number;
            canBeTransferred: boolean;
            category: number;
            kinshipBonus: number;
            experienceBonus: number;
          };
        })[];
      }
    >;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    ownerOf(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenIdsOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<number[]>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    aavegotchiClaimTime(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    allAavegotchisOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _approved: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    getAavegotchi(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenIdsOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    aavegotchiClaimTime(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allAavegotchisOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _approved: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAavegotchi(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getApproved(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      _owner: string,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerOf(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      _operator: string,
      _approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenByIndex(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenIdsOfOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenOfOwnerByIndex(
      _owner: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
