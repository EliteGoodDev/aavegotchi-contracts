/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface EscrowFacetInterface extends ethers.utils.Interface {
  functions: {
    "batchDepositERC20(uint256[],address[],uint256[])": FunctionFragment;
    "batchDepositGHST(uint256[],uint256[])": FunctionFragment;
    "depositERC20(uint256,address,uint256)": FunctionFragment;
    "escrowBalance(uint256,address)": FunctionFragment;
    "transferEscrow(uint256,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "batchDepositERC20",
    values: [BigNumberish[], string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchDepositGHST",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC20",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "escrowBalance",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferEscrow",
    values: [BigNumberish, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchDepositERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchDepositGHST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "escrowBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferEscrow",
    data: BytesLike
  ): Result;

  events: {
    "Erc20Deposited(uint256,address,address,address,uint256)": EventFragment;
    "TransferEscrow(uint256,address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Erc20Deposited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferEscrow"): EventFragment;
}

export type Erc20DepositedEvent = TypedEvent<
  [BigNumber, string, string, string, BigNumber] & {
    _tokenId: BigNumber;
    _erc20Contract: string;
    _from: string;
    _to: string;
    _depositAmount: BigNumber;
  }
>;

export type TransferEscrowEvent = TypedEvent<
  [BigNumber, string, string, string, BigNumber] & {
    _tokenId: BigNumber;
    _erc20Contract: string;
    _from: string;
    _to: string;
    _transferAmount: BigNumber;
  }
>;

export class EscrowFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: EscrowFacetInterface;

  functions: {
    batchDepositERC20(
      _tokenIds: BigNumberish[],
      _erc20Contracts: string[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchDepositGHST(
      _tokenIds: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositERC20(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    escrowBalance(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    transferEscrow(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _recipient: string,
      _transferAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  batchDepositERC20(
    _tokenIds: BigNumberish[],
    _erc20Contracts: string[],
    _values: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchDepositGHST(
    _tokenIds: BigNumberish[],
    _values: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositERC20(
    _tokenId: BigNumberish,
    _erc20Contract: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  escrowBalance(
    _tokenId: BigNumberish,
    _erc20Contract: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  transferEscrow(
    _tokenId: BigNumberish,
    _erc20Contract: string,
    _recipient: string,
    _transferAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    batchDepositERC20(
      _tokenIds: BigNumberish[],
      _erc20Contracts: string[],
      _values: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchDepositGHST(
      _tokenIds: BigNumberish[],
      _values: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    depositERC20(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    escrowBalance(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferEscrow(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _recipient: string,
      _transferAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Erc20Deposited(uint256,address,address,address,uint256)"(
      _tokenId?: BigNumberish | null,
      _erc20Contract?: string | null,
      _from?: string | null,
      _to?: null,
      _depositAmount?: null
    ): TypedEventFilter<
      [BigNumber, string, string, string, BigNumber],
      {
        _tokenId: BigNumber;
        _erc20Contract: string;
        _from: string;
        _to: string;
        _depositAmount: BigNumber;
      }
    >;

    Erc20Deposited(
      _tokenId?: BigNumberish | null,
      _erc20Contract?: string | null,
      _from?: string | null,
      _to?: null,
      _depositAmount?: null
    ): TypedEventFilter<
      [BigNumber, string, string, string, BigNumber],
      {
        _tokenId: BigNumber;
        _erc20Contract: string;
        _from: string;
        _to: string;
        _depositAmount: BigNumber;
      }
    >;

    "TransferEscrow(uint256,address,address,address,uint256)"(
      _tokenId?: BigNumberish | null,
      _erc20Contract?: string | null,
      _from?: null,
      _to?: string | null,
      _transferAmount?: null
    ): TypedEventFilter<
      [BigNumber, string, string, string, BigNumber],
      {
        _tokenId: BigNumber;
        _erc20Contract: string;
        _from: string;
        _to: string;
        _transferAmount: BigNumber;
      }
    >;

    TransferEscrow(
      _tokenId?: BigNumberish | null,
      _erc20Contract?: string | null,
      _from?: null,
      _to?: string | null,
      _transferAmount?: null
    ): TypedEventFilter<
      [BigNumber, string, string, string, BigNumber],
      {
        _tokenId: BigNumber;
        _erc20Contract: string;
        _from: string;
        _to: string;
        _transferAmount: BigNumber;
      }
    >;
  };

  estimateGas: {
    batchDepositERC20(
      _tokenIds: BigNumberish[],
      _erc20Contracts: string[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchDepositGHST(
      _tokenIds: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositERC20(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    escrowBalance(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferEscrow(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _recipient: string,
      _transferAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchDepositERC20(
      _tokenIds: BigNumberish[],
      _erc20Contracts: string[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchDepositGHST(
      _tokenIds: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositERC20(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    escrowBalance(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferEscrow(
      _tokenId: BigNumberish,
      _erc20Contract: string,
      _recipient: string,
      _transferAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
